name: Daily Papers

on:
  schedule:
    - cron: '0 22 * * *'
  workflow_dispatch:

permissions:
  contents: read
  actions: read

env:
  # Ensure workflow runs even with repository inactivity
  FORCE_RUN: true

jobs:
  run-arxrec-agent:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Workflow Status Check
      run: |
        echo "🚀 Starting Daily Papers workflow"
        echo "⏰ Triggered at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        echo "🔗 Repository: ${{ github.repository }}"
        echo "🌿 Branch: ${{ github.ref_name }}"
        echo "👤 Actor: ${{ github.actor }}"
        echo "📝 Event: ${{ github.event_name }}"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install --no-interaction

    - name: Run ArXiv Research Agent
      env:
        ALITHIA_CONFIG_JSON: ${{ secrets.ALITHIA_CONFIG_JSON }}
      run: |
        # Validate environment variables
        if [ -z "$ALITHIA_CONFIG_JSON" ]; then
          echo "❌ Error: ALITHIA_CONFIG_JSON secret is not set"
          exit 1
        fi

        # Parse the JSON config from environment variable
        echo "$ALITHIA_CONFIG_JSON" > arxrec_config.json
        poetry run python -m alithia.agents.arxrec --config arxrec_config.json

    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: arxrec-logs-${{ github.run_id }}
        path: |
          *.log
          arxrec_config.json
        retention-days: 7

    - name: Workflow Completion Status
      if: always()
      run: |
        echo "🏁 Workflow completed at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ Status: SUCCESS"
        else
          echo "❌ Status: FAILED"
        fi
        echo "📊 Run ID: ${{ github.run_id }}"
        echo "🔗 Run URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
